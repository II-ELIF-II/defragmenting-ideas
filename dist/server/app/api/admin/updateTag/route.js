"use strict";(()=>{var e={};e.id=832,e.ids=[832],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},15407:(e,a,t)=>{t.r(a),t.d(a,{headerHooks:()=>c,originalPathname:()=>f,patchFetch:()=>j,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>l,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>h});var r={};t.r(r),t.d(r,{POST:()=>d});var i=t(10884),s=t(16132),n=t(21040),o=t(27021),u=t(95798);async function d(e){try{let a=await e.json();if(!a.userId||!a.tagName||!a.tagId)return u.Z.json({message:"Error!"},{status:401});if(a.tagName.length>25)return u.Z.json({message:"Error too long!"},{status:400});let t=await o._.user.findFirst({select:{id:!0,isAdmin:!0,name:!1,email:!1,password:!1,emailVerified:!1,image:!1,createdAt:!1,updatedAt:!1},where:{id:a.userId}});if(!t||!t.isAdmin)return u.Z.json({message:"Error!"},{status:401});return await o._.tag.update({where:{id:a.tagId},data:{name:a.tagName}}),u.Z.json({},{status:200})}catch(e){return u.Z.json({message:"Error!"},{status:500})}}let p=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/admin/updateTag/route",pathname:"/api/admin/updateTag",filename:"route",bundlePath:"app/api/admin/updateTag/route"},resolvedPagePath:"E:\\Work\\Projects\\defragmenting-ideas\\src\\app\\api\\admin\\updateTag\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:l,headerHooks:c,staticGenerationBailout:h}=p,f="/api/admin/updateTag/route";function j(){return(0,n.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:g})}},27021:(e,a,t)=>{t.d(a,{_:()=>s});let r=require("@prisma/client"),i=global,s=i.prisma??new r.PrismaClient({log:["query"]})}};var a=require("../../../../webpack-runtime.js");a.C(e);var t=e=>a(a.s=e),r=a.X(0,[494,107],()=>t(15407));module.exports=r})();