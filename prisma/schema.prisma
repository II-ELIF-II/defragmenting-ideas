// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("PLANETSCALE_DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id        String    @id @default(cuid())
  title     String    @db.VarChar(81)
  thumbnail String    @db.VarChar(255)
  summary   String    @db.VarChar(255)
  content   String    @db.VarChar(2000)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  PostTag   PostTag[]
}

model Tag {
  id      Int       @id @default(autoincrement())
  name    String    @unique @db.VarChar(25)
  PostTag PostTag[]
}

model PostTag {
  id     Int     @id @default(autoincrement())
  Post   Post?   @relation(fields: [postId], references: [id])
  postId String?
  Tag    Tag?    @relation(fields: [tagId], references: [id])
  tagId  Int?

  @@index([postId])
  @@index([tagId])
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  isAdmin       Boolean   @default(false)
  name          String?
  email         String?   @unique @db.VarChar(255)
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
